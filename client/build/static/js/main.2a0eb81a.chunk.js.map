{"version":3,"sources":["components/products/SearchFilterStyles.js","components/products/SearchFilter.js","contexts/ProductContext.js","contexts/SessionUserContext.js","components/products/GoogleMapsProductsList.js","components/products/ProductListStyles.js","components/products/ProductsList.js","services/api.js","components/SignUp.js","components/Login.js","components/products/ProductDetails.js","components/products/GoogleMapsInput.js","api/service.js","components/products/AddProduct.js","components/dashboard/DashboardStyles.js","components/dashboard/DashSellerProducts.js","contexts/UserContext.js","components/dashboard/DashSellerRequests.js","components/dashboard/DashboardSeller.js","components/dashboard/DashboardBuyerWish.js","components/dashboard/DashboardBuyerOrder.js","components/dashboard/DashboardBuyer.js","components/dashboard/DashboardContainer.js","components/products/EditProduct.js","Protected.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","theme","card","maxWidth","root","width","filterContainer","display","flexDirection","justifyContent","alignItems","SearchFilter","classes","TextField","label","id","type","margin","className","textField","name","variant","autoComplete","value","this","props","searchText","onChange","handleChange","InputLabel","htmlFor","Select","searchCity","inputProps","MenuItem","distinctCity","map","city","searchCategory","distinctCategory","category","searchBrand","distinctBrand","brand","Typography","gutterBottom","Slider","priceValue","handlePriceChange","valueLabelDisplay","aria-labelledby","max","maxPrice","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","selectedDate","handleDateChange","KeyboardButtonProps","Component","withStyles","ProductContext","React","createContext","ProductProvider","Provider","SessionUserContext","SessionUserProvider","MapWrapped","withScriptjs","withGoogleMap","useState","selectedProduct","setSelectedProduct","console","log","useEffect","listener","e","key","window","addEventListener","removeEventListener","defaultZoom","defaultCenter","lat","lng","filteredProduct","product","_id","position","location","latitude","longitude","onClick","icon","url","scaledSize","google","maps","Size","onCloseClick","title","price","quantity","GoogleMapsProductsList","style","height","googleMapURL","loadingElement","containerElement","mapElement","mapListContainer","alignContent","listPageContainer","button","input","user","useContext","products","updateProductData","inputValues","setInputValues","setPriceValue","Date","setSelectedDate","setWishValue","handleWishChange","event","target","checked","productId","axios","put","then","response","data","updatedProducts","Set","filter","isSoldMatch","isSold","searchMatched","toLowerCase","includes","tags","find","tag","categoryMatched","priceMatched","dateMatched","parse","availability","date","newValue","Card","CardActionArea","CardMedia","component","alt","image","imageUrl","CardContent","to","color","description","currency","CardActions","FormControlLabel","control","Checkbox","FavoriteBorder","checkedIcon","Favorite","wishlist","some","signup","username","email","password","post","catch","err","login","SignUp","state","message","setState","handleSubmit","preventDefault","confirm","history","push","FormControl","Button","Login","ProductDetails","company","warrantyUntil","condition","createdAt","requested","getData","match","params","get","componentDidMount","handleClick","context","Fragment","img","src","Consumer","contextUser","disabled","contextType","Geocode","setApiKey","enableDebug","GoogleMapsInput","center","getCity","addressArray","i","length","types","long_name","getCountry","onPlaceSelected","place","formatted_address","address","address_components","country","latValue","geometry","lngValue","getMapData","fromAddress","results","onMarkerDrag","newLat","latLng","newLng","fromLatLng","AsyncMap","zoom","mapPosition","draggable","onDragEnd","markerPosition","paddingLeft","marginTop","marginBottom","undefined","service","create","baseURL","errorHandler","error","handleUpload","newImage","res","saveNewImage","updateImage","AddProduct","created_at","handleDateChangeWarrantyUntil","handleImageUpload","files","uploadData","FormData","append","secure_url","makeStyles","spacing","marginLeft","marginRight","dense","menu","flexWrap","formControl","minWidth","selectEmpty","onSubmit","required","placeholder","InputProps","startAdornment","InputAdornment","FormLabel","RadioGroup","aria-label","Radio","multiple","noValidate","flexGrow","backgroundColor","palette","background","paper","requesterRoot","overflowX","padding","table","fab","extendedIcon","requesterContainer","DashSellerProducts","alertOpen","setAlertOpen","deleteId","setDeleteId","rowsPerPage","setRowsPerPage","page","setPage","handleClose","seller","textAlign","Fab","Paper","Table","TableHead","TableRow","TableCell","TableBody","slice","Tooltip","IconButton","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","Dialog","open","onClose","aria-describedby","DialogTitle","DialogActions","delete","updatedProductState","autoFocus","UserContext","UserContextProvider","users","getUserData","children","DashSellerRequests","userList","handleCheckChange","index","indexOf","buyerId","forEach","buyer","filteredBuyer","reqUser","firstName","lastName","DashboardSeller","role","hidden","DashboardBuyerWish","wish","DashboardBuyerOrder","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","heading","ExpansionPanelDetails","DashboardBuyer","DashboardContainer","selectedTab","setSelectedTab","AppBar","Tabs","centered","Tab","EditProduct","status","Protected","path","redirectPath","rest","render","App","exact","ProductsList","Boolean","hostname","userResponse","ReactDOM","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2a0eb81a.chunk.js","sourcesContent":["const useStyles = theme => ({\n  card: {\n    maxWidth: 100\n  },\n  root: {\n    width: 300\n  },\n  filterContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n    // alignContent: \"center\"\n  }\n});\n\nexport default useStyles;\n","import React, { Component } from \"react\";\nimport {\n  Slider,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport useStyles from \"./SearchFilterStyles\";\nimport \"./../../App.css\";\n\nclass SearchFilter extends Component {\n  render() {\n    const classes = useStyles;\n    return (\n      <>\n        <TextField\n          label=\"search\"\n          id=\"outlined-name-input\"\n          type=\"search\"\n          margin=\"normal\"\n          className={classes.textField}\n          name=\"searchText\"\n          variant=\"outlined\"\n          autoComplete=\"search\"\n          value={this.props.searchText}\n          onChange={this.props.handleChange}\n        />\n\n        <InputLabel htmlFor=\"outlined-location-simple\">Location</InputLabel>\n        <Select\n          value={this.props.searchCity}\n          onChange={this.props.handleChange}\n          inputProps={{\n            name: \"searchCity\",\n            id: \"searchCity\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.distinctCity.map(city => {\n            return <MenuItem value={city}>{city}</MenuItem>;\n          })}\n        </Select>\n\n        <InputLabel htmlFor=\"outlined-category-simple\">Category</InputLabel>\n        <Select\n          value={this.props.searchCategory}\n          onChange={this.props.handleChange}\n          inputProps={{\n            name: \"searchCategory\",\n            id: \"searchCategory\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.distinctCategory.map(category => {\n            return <MenuItem value={category}>{category}</MenuItem>;\n          })}\n        </Select>\n\n        <InputLabel htmlFor=\"outlined-brand-simple\">Brand name</InputLabel>\n        <Select\n          value={this.props.searchBrand}\n          onChange={this.props.handleChange}\n          inputProps={{\n            name: \"searchBrand\",\n            id: \"searchBrand\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.distinctBrand.map(brand => {\n            return <MenuItem value={brand}>{brand}</MenuItem>;\n          })}\n        </Select>\n\n        <div className={classes.root}>\n          <Typography id=\"range-slider\" gutterBottom>\n            Price range\n          </Typography>\n          <Slider\n            name=\"priceValue\"\n            value={this.props.priceValue}\n            onChange={this.props.handlePriceChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"range-slider\"\n            max={this.props.maxPrice}\n            // getAriaValueText={valuetext}\n          />\n        </div>\n        <div className={classes.root}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Filter by availability\"\n                name=\"selectedDate\"\n                value={this.props.selectedDate}\n                onChange={this.props.handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(SearchFilter);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport const ProductContext = React.createContext();\n\nexport const ProductProvider = ProductContext.Provider;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport const SessionUserContext = React.createContext();\n\nexport const SessionUserProvider = SessionUserContext.Provider;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\n\nfunction MapList(props) {\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  console.log(\"testttt\", props);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedProduct(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <>\n      <GoogleMap\n        defaultZoom={4}\n        defaultCenter={{ lat: -34, lng: 150 }}\n        // defaultOptions={{ styles: mapStyles }}\n      >\n        {props.filteredProduct.map(product => (\n          <Marker\n            key={product._id}\n            position={{\n              lat: product.location.latitude,\n              lng: product.location.longitude\n            }}\n            onClick={() => {\n              setSelectedProduct(product);\n            }}\n            icon={{\n              url: \"/map-marker-alt-solid.svg\",\n              scaledSize: new window.google.maps.Size(25, 25)\n            }}\n          />\n        ))}\n        {selectedProduct && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedProduct(null);\n            }}\n            position={{\n              lat: selectedProduct.location.latitude,\n              lng: selectedProduct.location.longitude\n            }}\n          >\n            <div>\n              <h2>{selectedProduct.title}</h2>\n              <p>{selectedProduct.price}</p>\n              <p>{selectedProduct.quantity}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </>\n  );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(MapList));\n\nexport default function GoogleMapsProductsList(props) {\n  console.log(props);\n  return (\n    <div style={{ width: \"40vw\", height: \"80vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAEEpqstn15A1q4yFwIv81jnDVG7X0hm9Q`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        filteredProduct={props.filteredProduct}\n      />\n    </div>\n  );\n}\n","const useStyles = theme => ({\n  card: {\n    maxWidth: 300\n    // margin: \"0 auto\"\n  },\n  mapListContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    // alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  listPageContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    // margin: theme.spacing(1)\n  },\n  input: {\n    display: \"none\"\n  }\n});\n\nexport default useStyles;\n","import React, { Component, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchFilter from \"./SearchFilter\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\nimport GoogleMapsProductsList from \"./GoogleMapsProductsList\";\nimport axios from \"axios\";\n\nimport useStyles from \"./ProductListStyles\";\nimport {\n  Typography,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  CardActionArea,\n  Card,\n  FormControlLabel,\n  Checkbox,\n  withStyles\n} from \"@material-ui/core\";\nimport { Favorite, FavoriteBorder } from \"@material-ui/icons\";\n\nconst ProductsList = props => {\n  const { user } = useContext(SessionUserContext);\n\n  const { products, updateProductData } = useContext(ProductContext);\n  const [inputValues, setInputValues] = useState({\n    searchText: \"\",\n    searchCategory: \"\",\n    searchBrand: \"\",\n    searchCity: \"\"\n  });\n  const [priceValue, setPriceValue] = useState([20, 300]);\n  const [selectedDate, setSelectedDate] = useState(\n    new Date(\"December 31, 2019\")\n  );\n  const [wishValue, setWishValue] = useState(false);\n\n  let handleChange = event => {\n    const { name, value } = event.target;\n    setInputValues({ ...inputValues, [name]: value });\n  };\n\n  let handlePriceChange = (event, newValue) => {\n    setPriceValue(newValue);\n  };\n\n  let handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  let handleWishChange = event => {\n    setWishValue(event.target.checked);\n    let productId = event.target.value;\n    if (event.target.checked) {\n      axios.put(`/api/products/wish/add/${productId}`).then(response => {\n        console.log(response.data);\n        let updatedProducts = products.map(product => {\n          if (product._id === response.data._id) return response.data;\n          else return product;\n        });\n        updateProductData(updatedProducts);\n      });\n    } else {\n      axios.put(`/api/products/wish/remove/${productId}`).then(response => {\n        let updatedProducts = products.map(product => {\n          if (product._id === response.data._id) return response.data;\n          else return product;\n        });\n        updateProductData(updatedProducts);\n      });\n    }\n  };\n\n  // the distinctCategory variable is created to populate the category dropdown\n\n  // render() {\n  //   const { classes } = this.props;\n\n  const classes = useStyles();\n\n  // the distinctCategory variable is created to populate the category dropdown\n  const distinctCategory = [\n    ...new Set(\n      products.map(product => {\n        return product.category;\n      })\n    )\n  ];\n\n  const distinctBrand = [\n    ...new Set(\n      products.map(product => {\n        return product.brand;\n      })\n    )\n  ];\n\n  const distinctCity = [\n    ...new Set(\n      products.map(product => {\n        return product.location && product.location.city;\n      })\n    )\n  ];\n\n  // const maxPrice = Math.max(\n  //   ...products.map(product => {\n  //     return product.price;\n  //   })\n  // );\n\n  let filteredProduct = products.filter(product => {\n    let isSoldMatch = product.isSold === false;\n\n    let searchMatched =\n      product.title\n        .toLowerCase()\n        .includes(inputValues.searchText.toLowerCase()) ||\n      product.tags.find(tag => {\n        return tag.toLowerCase().includes(inputValues.searchText.toLowerCase());\n      });\n\n    let categoryMatched = product.category\n      .toLowerCase()\n      .includes(inputValues.searchCategory.toLowerCase());\n\n    let priceMatched =\n      product.price >= priceValue[0] && product.price <= priceValue[1];\n\n    // Date.parse converts the date string into milliseconds\n    let dateMatched =\n      Date.parse(product.availability) <= Date.parse(selectedDate);\n\n    return (\n      isSoldMatch &&\n      searchMatched &&\n      categoryMatched &&\n      priceMatched &&\n      dateMatched\n    );\n  });\n\n  return (\n    <div className={classes.listPageContainer}>\n      <h1>Product List</h1>\n      <SearchFilter\n        searchText={inputValues.searchText}\n        searchCategory={inputValues.searchCategory}\n        searchBrand={inputValues.searchBrand}\n        searchCity={inputValues.searchCity}\n        priceValue={priceValue}\n        selectedDate={selectedDate}\n        handleChange={handleChange}\n        distinctCategory={distinctCategory}\n        distinctBrand={distinctBrand}\n        distinctCity={distinctCity}\n        // maxPrice={maxPrice}\n\n        handleDateChange={handleDateChange}\n        handlePriceChange={handlePriceChange}\n      />\n      <GoogleMapsProductsList filteredProduct={filteredProduct} />\n\n      <div className={classes.mapListContainer}>\n        <div>\n          {filteredProduct.map(product => {\n            return (\n              <>\n                <Card className={classes.card}>\n                  <CardActionArea>\n                    <CardMedia\n                      component=\"img\"\n                      alt={product.title}\n                      height=\"140\"\n                      image={`${product.imageUrl[0]}`}\n                      title={product.title}\n                    />\n                    <CardContent>\n                      <Link to={`/products/${product._id}`}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {product.title}\n                        </Typography>\n                      </Link>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        {product.description} <br />\n                        {product.currency} {product.price}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                  <CardActions>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          icon={<FavoriteBorder />}\n                          checkedIcon={<Favorite />}\n                          value={product._id}\n                          checked={product.wishlist.some(\n                            wishlist => wishlist._id === user._id\n                          )}\n                          onChange={handleWishChange}\n                        />\n                      }\n                      label=\"Add to Wishlist\"\n                    />\n                  </CardActions>\n                  {console.log(\n                    product.wishlist.some(\n                      wishlist => wishlist._id === user._id\n                    ),\n                    product.wishlist,\n                    user._id\n                  )}\n                  {/* <CardActions>\n                      <Button size=\"small\" color=\"primary\">\n                        Add to wishlist\n                      </Button>\n                    </CardActions> */}\n                </Card>\n              </>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withStyles(useStyles)(ProductsList);\n","import axios from \"axios\";\n\nconst signup = (username, email, password) => {\n  return axios\n    .post(\"/api/auth/signup\", { username, email, password })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (email, password) => {\n  return axios\n    .post(\"/api/auth/login\", { email, password })\n    .then(response => {\n      console.log(\"login api? :\", response);\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  return axios\n    .delete(\"/api/auth/logout\")\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nexport { signup, login, logout };\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/api\";\nimport { TextField, FormControl, Button } from \"@material-ui/core\";\n\nexport default class SignUp extends Component {\n  state = {\n    message: \"\",\n    password: \"\",\n    username: \"\",\n    email: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    // console.log(\"username:\", this.state.username);\n    // console.log(\"email:\", this.state.email);\n    // console.log(\"password:\", this.state.password);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { username, email, password } = this.state;\n    console.log(this.state.username);\n    signup(username, email, password).then(data => {\n      console.log(\"signup?\", data.message);\n      window.confirm(data.message);\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          password: \"\",\n          username: \"\",\n          email: \"\"\n        });\n      } else {\n        // this.props.setUser(data);\n        console.log(this.props.history);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Sign Up</h2>\n        <FormControl variant=\"outlined\">\n          <TextField\n            label=\"username\"\n            id=\"outlined-username-input-signup\"\n            type=\"text\"\n            margin=\"normal\"\n            // className={classes.textField}\n            name=\"username\"\n            variant=\"outlined\"\n            autoComplete=\"username\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n\n          <TextField\n            label=\"email\"\n            id=\"outlined-email-input-signup\"\n            type=\"email\"\n            margin=\"normal\"\n            // className={classes.textField}\n            name=\"email\"\n            variant=\"outlined\"\n            autoComplete=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n\n          <TextField\n            label=\"password / min. 8char\"\n            id=\"outlined-password-input-signup\"\n            type=\"password\"\n            margin=\"normal\"\n            // className={classes.textField}\n            name=\"password\"\n            variant=\"outlined\"\n            autoComplete=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <label htmlFor=\"password\">\n            *password must contain Capital letter and number\n          </label>\n          <Button variant=\"outlined\" onClick={this.handleSubmit}>\n            submit\n          </Button>\n        </FormControl>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import Styles from \"./Styles\";\nimport { login } from \"../services/api\";\nimport { TextField, FormControl, Button } from \"@material-ui/core\";\n\nexport default class Login extends Component {\n  state = {\n    password: \"\",\n    email: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n\n    console.log(\"email:\", this.state.email);\n    console.log(\"password:\", this.state.password);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n    console.log(this.state.password);\n    login(email, password).then(data => {\n      console.log(\"login?react?\", data);\n      window.confirm(data.message);\n      if (data.message) {\n        this.setState({\n          message: data.message,\n          password: \"\",\n          email: \"\"\n        });\n      } else {\n        // this.props.setUser(data);\n        console.log(this.props.history);\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <h2>Log in</h2>\n        <FormControl variant=\"outlined\">\n          <TextField\n            label=\"email\"\n            id=\"outlined-email-input-login\"\n            type=\"email\"\n            margin=\"normal\"\n            // className={classes.textField}\n            name=\"email\"\n            variant=\"outlined\"\n            autoComplete=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n\n          <TextField\n            label=\"password / min. 8char\"\n            id=\"outlined-password-input-login\"\n            type=\"password\"\n            margin=\"normal\"\n            // className={classes.textField}\n            name=\"password\"\n            variant=\"outlined\"\n            autoComplete=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <Button variant=\"outlined\" onClick={this.handleSubmit}>\n            submit\n          </Button>\n        </FormControl>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\nimport useStyles from \"./ProductListStyles\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\n\nclass ProductDetails extends Component {\n  static contextType = ProductContext;\n  state = {\n    title: \"\",\n    description: \"\",\n    imageUrl: [],\n    brand: \"\",\n    category: \"\",\n    quantity: 0,\n    price: 0,\n    currency: \"EUR\",\n    tags: [],\n    company: \"\",\n    location: {\n      latitude: null,\n      longitude: null\n    },\n    availability: null,\n    warrantyUntil: null,\n    condition: \"\",\n    isSold: false,\n    createdAt: null,\n    _id: \"\",\n    requested: []\n  };\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    // console.log(`id`, id)\n\n    axios\n      .get(`/api/products/${id}`)\n      .then(response => {\n        // TODO @Ninette: latitude, longitude\n        this.setState({\n          title: response.data.title,\n          description: response.data.description,\n          imageUrl: response.data.imageUrl,\n          brand: response.data.brand,\n          category: response.data.category,\n          quantity: response.data.quantity,\n          price: response.data.price,\n          currency: response.data.currency,\n          tags: response.data.currency,\n          company: response.data.company,\n          availability: response.data.availability,\n          warrantyUntil: response.data.warrantyUntil,\n          condition: response.data.condition,\n          createdAt: response.data.createdAt\n        });\n        // console.log(`GET this.state.response`, response.data)\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    // .catch(err => {\n    //   console.log(`ERR`, err.response);\n    //   if (err.response.status === 404) {\n    //     this.setState({ error: \"Not found\" });\n    //   }\n    // });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  handleClick = id => {\n    axios.put(`api/products/request/${id}`).then(response => {\n      let updatedProducts = this.context.products.map(product => {\n        if (id === response.data._id) return response.data;\n        else return product;\n      });\n      this.context.updateProductData(updatedProducts);\n    });\n  };\n\n  render() {\n    // TODO 1: Implement Material UI Styles once we agreed on one style\n    const {\n      id,\n      title,\n      description,\n      imageUrl,\n      brand,\n      category,\n      quantity,\n      price,\n      currency,\n      tags,\n      company,\n      availability,\n      warrantyUntil,\n      condition,\n      isSold,\n      createdAt,\n      _id,\n      requested\n    } = this.state;\n\n    //  console.log(`imageUrl`, imageUrl);\n\n    return (\n      <div>\n        <h1>Product Details Page</h1>\n        <React.Fragment>\n          <div>\n            {// TODO: Provide a unique key\n            imageUrl &&\n              imageUrl.map(img => {\n                return (\n                  <ul>\n                    <li>\n                      <img src={img} alt=\"business img\" />\n                    </li>\n                  </ul>\n                );\n              })}\n          </div>\n          <h2>{title}</h2>\n          <div>\n            {description}\n            {brand}\n            {tags}\n            {category}\n            {quantity}\n            {price}\n            {currency}\n            {company}\n            {/* // TODO @Ninette: Add latitude, longitude */}\n            {availability}\n            {warrantyUntil}\n            {condition}\n            {/* // TODO: Only seller should see `isSold` */}\n            {isSold}\n            {createdAt}\n          </div>\n          <p>\n            Send request to seller and he or she will be able to view your email\n            address to contact you\n          </p>\n          {\n            <SessionUserContext.Consumer>\n              {contextUser => {\n                console.log(\"requested\", requested);\n                return requested.some(user => user._id === contextUser._id) ? (\n                  <Button variant=\"contained\" color=\"primary\" disabled>\n                    Request Sent\n                  </Button>\n                ) : (\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => this.handleClick(_id)}\n                  >\n                    Send Request\n                  </Button>\n                );\n              }}\n            </SessionUserContext.Consumer>\n          }\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetails;\n","import React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker\n} from \"react-google-maps\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyAEEpqstn15A1q4yFwIv81jnDVG7X0hm9Q\");\nGeocode.enableDebug();\n\nclass GoogleMapsInput extends Component {\n  state = {\n    center: {\n      lat: this.props.center.lat,\n      lng: this.props.center.lng\n    }\n  };\n\n  getCity = addressArray => {\n    let city = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (\n        addressArray[i].types[0] &&\n        \"administrative_area_level_1\" === addressArray[i].types[0]\n      ) {\n        city = addressArray[i].long_name;\n        return city;\n      }\n    }\n  };\n\n  getCountry = addressArray => {\n    let country = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (addressArray[i].types[0] && \"country\" === addressArray[i].types[0]) {\n        country = addressArray[i].long_name;\n        return country;\n      }\n    }\n  };\n\n  onPlaceSelected = place => {\n    console.log(place);\n    if (place.formatted_address) {\n      const address = place.formatted_address,\n        addressArray = place.address_components,\n        city = this.getCity(addressArray),\n        country = this.getCountry(addressArray),\n        latValue = place.geometry.location.lat(),\n        lngValue = place.geometry.location.lng();\n\n      this.props.getMapData(address, city, country, latValue, lngValue);\n    } else {\n      Geocode.fromAddress(place.name)\n        .then(response => {\n          console.log(response);\n          const data = response.results[0];\n          const address = data.formatted_address,\n            addressArray = data.address_components,\n            city = this.getCity(addressArray),\n            country = this.getCountry(addressArray),\n            latValue = data.geometry.location.lat,\n            lngValue = data.geometry.location.lng;\n\n          this.props.getMapData(address, city, country, latValue, lngValue);\n        })\n        .then(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  onMarkerDrag = event => {\n    console.log(event);\n    let newLat = event.latLng.lat(),\n      newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng)\n      .then(response => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          country = this.getCountry(addressArray);\n\n        this.props.getMapData(address, city, country, newLat, newLng);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap(props => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          center={{\n            lat: this.props.mapPosition.lat,\n            lng: this.props.mapPosition.lng\n          }}\n        >\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={this.props.address}\n            draggable={true}\n            onDragEnd={this.onMarkerDrag}\n            position={{\n              lat: this.props.markerPosition.lat,\n              lng: this.props.markerPosition.lng\n            }}\n          />\n          <Marker />\n          {/* For Auto complete Search Box */}\n          <Autocomplete\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              paddingLeft: \"16px\",\n              marginTop: \"2px\",\n              marginBottom: \"100px\"\n            }}\n            onPlaceSelected={this.onPlaceSelected}\n          />\n        </GoogleMap>\n      ))\n    );\n\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <>\n          <div>\n            <AsyncMap\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEEpqstn15A1q4yFwIv81jnDVG7X0hm9Q&libraries=places\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: this.props.height }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n            />\n            <p>{this.props.address}</p>\n          </div>\n        </>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\n\nexport default GoogleMapsInput;\n","// api/service.js\nimport axios from 'axios';\n\n// TODO: Setup prod env\nconst service = axios.create({\n  baseURL: 'http://localhost:5555/api',\n  // => only logged in users can upload images\n  // withCredentials: true\n});\n\nconst errorHandler = err => {\n  console.error(err);\n  throw err;\n};\n\nexport default {\n  service,\n  handleUpload (newImage) {\n    console.log('Image in service: ', newImage);\n    return service.post('/cloudinary/new/upload', newImage)\n      .then(res => {\n        console.log(res)\n        return res.data\n      })\n      .catch(errorHandler);\n  },\n\n  // Upload image on `AddProduct` page\n  saveNewImage (newImage) {\n    console.log('New Image saved: ', newImage)\n    return service.post('/new', newImage)\n      .then(res => res.data)\n      .catch(errorHandler);\n  },\n\n  // Upload image on `AddProduct` page\n  updateImage (newImage) {\n    console.log('New Image saved: ', newImage)\n    return service.put(`/edit`, newImage)\n      .then(res => res.data)\n      .catch(errorHandler);\n  }\n}","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  Grid,\n  InputAdornment,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  Select,\n  InputLabel,\n  MenuItem\n} from \"@material-ui/core\";\nimport GoogleMapsInput from \"./GoogleMapsInput\";\nimport service from \"./../../api/service\";\n\nexport default class AddProduct extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    imageUrl: [],\n    brand: \"\",\n    category: \"\",\n    quantity: 0,\n    price: 0,\n    currency: \"EUR\",\n    tags: [],\n    company: \"\",\n    location: {\n      latitude: 52.52,\n      longitude: 13.405,\n      city: \"\",\n      address: \"\",\n      country: \"\"\n    },\n    markerPosition: {\n      lat: 52.52,\n      lng: 13.405\n    },\n    availability: null,\n    warrantyUntil: null,\n    condition: \"\",\n    createdAt: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    console.log(this.state)\n    axios\n      // GET api/products/new to map POST route in the backend`\n      .post(\"/api/products/new\", {\n        title: this.state.title,\n        description: this.state.description,\n        // FIXME: image Upload\n        imageUrl: this.state.imageUrl,\n        brand: this.state.brand,\n        tags: this.state.tags,\n        category: this.state.category,\n        quantity: this.state.quantity,\n        price: this.state.price,\n        currency: this.state.currency,\n        company: this.state.company,\n        latitude: this.state.location.latitude,\n        longitude: this.state.location.longitude,\n        city: this.state.location.city,\n        address: this.state.location.address,\n        country: this.state.location.country,\n        availability: this.state.availability,\n        warrantyUntil: this.state.warrantyUntil,\n        condition: this.state.condition,\n        createdAt: this.state.created_at\n      })\n      .then(response => {\n        console.log(\"[AddProduct.js] handleSubmit event starting...\");\n        console.log(\"latitude\", this.state.location.latitude);\n        this.setState({\n          title: \"\",\n          description: \"\",\n          imageUrl: [],\n          brand: \"\",\n          category: \"\",\n          quantity: 0,\n          price: 0,\n          currency: \"EUR\",\n          tags: [],\n          company: \"\",\n          location: {\n            latitude: null,\n            longitude: null,\n            city: \"\",\n            address: \"\",\n            country: \"\"\n          },\n          availability: null,\n          warrantyUntil: null,\n          condition: \"\",\n          createdAt: null\n        });\n        console.log(`[AddProduct.js] response.data:`, response.data);\n      })\n      .catch(err => {\n        console.log(`[AddProduct.js]: response data`, err);\n      });\n  };\n\n  //catching the date for availability\n  handleDateChange = date => {\n    this.setState({\n      availability: date\n    });\n    console.log(\"availability:\", date);\n  };\n\n  //catching the date for warranty until\n  handleDateChangeWarrantyUntil = date => {\n    this.setState({\n      warrantyUntil: date\n    });\n    console.log(\"warrantyUntil:\", date);\n  };\n\n  // eventhandler\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(\"handleChange event.target.value\", event.target.value);\n  };\n\n  // Upload to Cloudinary\n  handleImageUpload = event => {\n    console.log(\"The Image to be uploaded is: \", event.target.files[0]);\n\n    const uploadData = new FormData();\n    // req.body to .create() method when creating a new Image in '/api/products/new' POST route\n    uploadData.append(\"imageUrl\", event.target.files[0]);\n\n    service.handleUpload(uploadData)\n    .then(response => {\n      console.log(response)\n        this.setState({imageUrl:[...this.state.imageUrl,response.secure_url]});\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  }\n\n  getMapData = (address, country, city, lat, lng) => {\n    this.setState({\n      location: {\n        latitude: lat,\n        longitude: lng,\n        city: city,\n        address: address,\n        country: country\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    });\n  };\n\n  render() {\n    const styling = makeStyles(theme => ({\n      button: {\n        margin: theme.spacing(1)\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n      },\n      input: {\n        display: \"none\"\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2)\n      }\n    }));\n\n    const classes = styling;\n    return (\n      <>\n        <FormControl onSubmit={this.handleSubmit}>\n          {/* Title */}\n          <TextField\n            required\n            id=\"outlined-title-input\"\n            label=\"Title\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"e.g. Nestlé D1234 Coffee Maker\"\n            autoComplete=\"title\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          {/* Description */}\n          <TextField\n            id=\"outlined-description-input\"\n            label=\"Description\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"description\"\n            autoComplete=\"description\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          {/* Brand */}\n          <TextField\n            id=\"outlined-brand-input\"\n            label=\"Brand\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"e.g. Apple\"\n            autoComplete=\"brand\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.brand}\n            onChange={this.handleChange}\n          />\n          {/* {Category} */}\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-category-simple\">Category</InputLabel>\n            <Select\n              value={this.state.category}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"category\",\n                id: \"outlined-category-simple\"\n              }}\n            >\n              <MenuItem value=\"Category\">\n                <em>Select...</em>\n              </MenuItem>\n              <MenuItem value={\"Food\"}>Food</MenuItem>\n              <MenuItem value={\"Textile\"}>Textile</MenuItem>\n              <MenuItem value={\"Energy\"}>Energy</MenuItem>\n              <MenuItem value={\"Architecture\"}>Architecture</MenuItem>\n              <MenuItem value={\"Woodwork\"}>Woodwork</MenuItem>\n              <MenuItem value={\"Art\"}>Art</MenuItem>\n              <MenuItem value={\"Economics\"}>Economics</MenuItem>\n              <MenuItem value={\"Science\"}>Science</MenuItem>\n              <MenuItem value={\"Education\"}>Education</MenuItem>\n              <MenuItem value={\"Manufactory\"}>Manufactory</MenuItem>\n            </Select>\n          </FormControl>\n          {/* Quantity */}\n          <TextField\n            required\n            id=\"outlined-quantity-input\"\n            label=\"Quantity\"\n            className={classes.textField}\n            type=\"number\"\n            name=\"quantity\"\n            autoComplete=\"quantity\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.quantity}\n            onChange={this.handleChange}\n          />\n          {/* Price */}\n          <TextField\n            id=\"outlined-adornment-price\"\n            label=\"Price\"\n            className={classes.textField}\n            type=\"number\"\n            name=\"price\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.price}\n            onChange={this.handleChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">EUR</InputAdornment>\n              )\n            }}\n          />\n          {/* Company */}\n          <TextField\n            id=\"outlined-company-input\"\n            label=\"Company Name\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"company\"\n            placeholder=\"IchiBizz Inc\"\n            autoComplete=\"company\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.company}\n            onChange={this.handleChange}\n          />\n          {/* Location (read-only) this is populated from the map*/}\n          <TextField\n            disabled\n            id=\"outlined-location\"\n            label=\"Location\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"address\"\n            placeholder=\"e.g. Berlin\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.location.address}\n          />\n          {/* Availability */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                name=\"availability\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Availability Date\"\n                value={this.state.availability}\n                onChange={this.handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"Change Date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          {/* Warranty Until */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                name=\"warrantyUntil\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Warranty until\"\n                value={this.state.warrantyUntil}\n                onChange={this.handleDateChangeWarrantyUntil}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          {/* Condition */}\n          <FormControl\n            required\n            component=\"fieldset\"\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Condition</FormLabel>\n            <RadioGroup\n              aria-label=\"condition\"\n              name=\"condition\"\n              value={this.state.condition}\n              onChange={this.handleChange}\n            >\n              <FormControlLabel\n                value=\"used\"\n                control={<Radio />}\n                label=\"used\"\n                name=\"condition\"\n              />\n              <FormControlLabel\n                value=\"new\"\n                control={<Radio />}\n                label=\"new\"\n                name=\"condition\"\n              />\n            </RadioGroup>\n          </FormControl>\n          {/* image Url */}\n          <label htmlFor=\"imageUrl\">Upload Image: </label>\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <br />\n          {/* // FIXME: Decide tagging via Google Vision\n          Category: [google vision?] */}\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            className={classes.button}\n            onClick={this.handleSubmit}\n            noValidate >\n            Create\n          </Button>\n        </FormControl>\n        {/* GoogleMaps for entering location */}\n        <GoogleMapsInput\n          google={this.props.google}\n          center={{\n            lat: 52.52,\n            lng: 13.405\n          }}\n          height=\"300px\"\n          zoom={12}\n          getMapData={this.getMapData}\n          markerPosition={{\n            lat: this.state.markerPosition.lat,\n            lng: this.state.markerPosition.lng\n          }}\n          address={this.state.location.address}\n          country={this.state.location.country}\n          city={this.state.location.city}\n          mapPosition={{\n            lat: this.state.location.latitude,\n            lng: this.state.location.longitude\n          }}\n        />\n      </>\n    );\n  }\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  requesterRoot: {\n    flexGrow: 1,\n    width: \"100%\",\n    marginTop: theme.spacing(3),\n    overflowX: \"auto\",\n    maxWidth: 500,\n    margin: \"2%\",\n    padding: \"2%\"\n  },\n  table: {\n    minWidth: 700\n  },\n  fab: {\n    margin: theme.spacing(1)\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  },\n  requesterContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  }\n}));\n\nexport default useStyles;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n  Tooltip,\n  Paper,\n  TablePagination,\n  Fab\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport axios from \"axios\";\nimport useStyles from \"./DashboardStyles\";\n\nconst DashSellerProducts = props => {\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n\n  const user = useContext(SessionUserContext);\n  const { products, updateProductData } = useContext(ProductContext);\n\n  const handleChangeRowsPerPage = event => {\n    let value = +event.target.value;\n    setRowsPerPage(value);\n    setPage(0);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleOpen = id => {\n    setAlertOpen(true);\n    setDeleteId(id);\n  };\n\n  const handleClose = () => {\n    setAlertOpen(false);\n  };\n\n  const handleDelete = () => {\n    axios.delete(`/api/products/${deleteId}`).then(response => {\n      setDeleteId(\"\");\n      let updatedProductState = products.filter(\n        product => product._id !== deleteId\n      );\n\n      updateProductData(updatedProductState);\n      handleClose();\n      // props.history.push(\"/dashboard\");\n    });\n  };\n\n  const classes = useStyles();\n\n  let filteredProduct = products.filter(product => {\n    return product.seller === user.user._id;\n  });\n\n  return (\n    <>\n      {console.log(products)}\n      <h1 style={{ textAlign: \"center\" }}>Your Products</h1>\n      <Link to={\"/products/new\"}>\n        <Fab\n          color=\"secondary\"\n          variant=\"extended\"\n          aria-label=\"add-product\"\n          className={classes.fab}\n        >\n          <AddIcon className={classes.extendedIcon} />\n          Add Product\n        </Fab>\n      </Link>\n      <Paper>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Quantity</TableCell>\n              <TableCell>Price</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell />\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredProduct\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(data => {\n                return (\n                  <TableRow>\n                    <TableCell>\n                      <img\n                        style={{ height: \"15%\" }}\n                        src={`${data.imageUrl[0]}`}\n                        alt=\"product-image\"\n                      />\n                    </TableCell>\n                    <TableCell>{data.title}</TableCell>\n                    <TableCell>{data.quantity}</TableCell>\n                    <TableCell>{data.price}</TableCell>\n                    <TableCell>{data.isSold ? \"Sold\" : \"Available\"}</TableCell>\n                    <TableCell>\n                      <Tooltip title=\"Edit\">\n                        <IconButton aria-label=\"edit\">\n                          <Link to={`/products/${data._id}`}>\n                            <EditIcon />\n                          </Link>\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                    <TableCell>\n                      <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\">\n                          <DeleteIcon onClick={() => handleOpen(data._id)} />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredProduct.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"previous page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"next page\"\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Dialog\n        open={alertOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure you want to delete this product?\"}\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleDelete} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DashSellerProducts;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport const UserContext = React.createContext();\n\nexport default class UserContextProvider extends Component {\n  state = {\n    users: []\n  };\n\n  getUserData = () => {\n    axios\n      .get(\"/api/users\")\n      .then(response => {\n        console.log(response);\n        this.setState({\n          users: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n  componentDidMount = () => {\n    this.getUserData();\n  };\n\n  render() {\n    console.log(this.state.users);\n    return (\n      <UserContext.Provider\n        value={{ state: this.state, getUserData: this.getUserData }}\n      >\n        {this.props.children}\n      </UserContext.Provider>\n    );\n  }\n}\n","import React, { Component, useState, useContext } from \"react\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Paper,\n  Checkbox,\n  withStyles\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\nimport { UserContext } from \"../../contexts/UserContext\";\n\nimport axios from \"axios\";\nimport useStyles from \"./DashboardStyles\";\n\nconst DashSellerRequests = props => {\n  const user = useContext(SessionUserContext);\n  const userList = useContext(UserContext);\n  const { products, updateProductData } = useContext(ProductContext);\n\n  //TODO: review\n  let handleCheckChange = event => {\n    let value = event.target.value;\n    let index = value.indexOf(\"#\");\n    let productId = value.slice(0, index);\n    let buyerId = value.slice(index + 1);\n\n    products.forEach(product => {\n      if (product._id === productId) {\n        product.isSold = event.target.checked;\n        axios\n          .put(`api/products/sell/${productId}`, {\n            isSold: event.target.checked,\n            buyer: buyerId\n          })\n          .then(response => {\n            let updatedProducts = products.map(product => {\n              if (product._id === response.data._id) return response.data;\n              else return product;\n            });\n            updateProductData(updatedProducts);\n          });\n      }\n    });\n  };\n\n  let filteredProduct = products.filter(product => {\n    return product.seller === user.user._id;\n  });\n\n  let filteredBuyer = userList.state.users.filter(user => {\n    products.some(product => {\n      return user._id === product.buyer;\n    });\n  });\n  console.log(\"product list\", filteredProduct);\n  console.log(\"buyer list\", filteredBuyer);\n\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Requests to buy</h1>\n      <div>\n        {filteredProduct.map(product => {\n          console.log(\"buyer\", product.buyer);\n          return (\n            <>\n              <Paper>\n                <img\n                  style={{ height: \"100px\" }}\n                  src={`${product.imageUrl[0]}`}\n                  alt=\"product-image\"\n                />\n                <Typography variant=\"h5\" component=\"h3\">\n                  {product.title}\n                </Typography>\n                <Typography variant=\"h6\" component=\"h3\">\n                  Price: EUR {product.price}, Quantity: {product.quantity}\n                </Typography>\n                <Typography component=\"p\">\n                  <Table>\n                    <TableBody>\n                      {product.requested.map(reqUser => {\n                        return (\n                          <>\n                            {!product.buyer ? (\n                              <TableRow>\n                                <TableCell>\n                                  {reqUser.firstName} {reqUser.lastName}\n                                </TableCell>\n                                <TableCell>{reqUser.email}</TableCell>\n                                <TableCell>\n                                  Sell\n                                  <Checkbox\n                                    checked={product.isSold}\n                                    onChange={handleCheckChange}\n                                    value={`${product._id}#${reqUser._id}`}\n                                    inputProps={{\n                                      \"aria-label\": \"sales checkbox\"\n                                    }}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            ) : (\n                              <TableRow>\n                                <TableCell>\n                                  BUYER NAME\n                                  {/* {user.firstName}\n                                  {user.lastName} */}\n                                </TableCell>\n                                <TableCell></TableCell>\n                                <TableCell>\n                                  Sell\n                                  <Checkbox\n                                    disabled\n                                    checked\n                                    value={product._id}\n                                    inputProps={{\n                                      \"aria-label\": \"sales checkbox\"\n                                    }}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            )}\n                          </>\n                        );\n                      })}\n                    </TableBody>\n                  </Table>\n                </Typography>\n              </Paper>\n            </>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default DashSellerRequests;\n","import React, { Component } from \"react\";\nimport DashSellerProducts from \"./DashSellerProducts\";\nimport DashSellerRequests from \"./DashSellerRequests\";\nimport { Typography } from \"@material-ui/core\";\n\nconst DashboardSeller = props => {\n  const { children, value, index, ...other } = props;\n  return (\n    <>\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`seller-tabpanel-${index}`}\n        aria-labelledby=\"seller-tabpanel\"\n      >\n        <DashSellerProducts />\n        <DashSellerRequests />\n      </Typography>\n    </>\n  );\n};\nexport default DashboardSeller;\n","import React, { Component, useState, useContext, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Typography,\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  IconButton,\n  Tooltip,\n  Paper,\n  TablePagination,\n  Fab\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport axios from \"axios\";\nimport useStyles from \"./DashboardStyles\";\n\nconst DashboardBuyerWish = props => {\n  console.log(\"props\", props);\n  const user = useContext(SessionUserContext);\n  const { products, updateProductData } = useContext(ProductContext);\n\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [page, setPage] = useState(0);\n\n  const handleChangeRowsPerPage = event => {\n    let value = +event.target.value;\n    setRowsPerPage(value);\n    setPage(0);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleOpen = id => {\n    setAlertOpen(true);\n    setDeleteId(id);\n  };\n\n  const handleClose = () => {\n    setAlertOpen(false);\n  };\n\n  const handleRemove = () => {\n    let id = deleteId;\n    axios.put(`/api/products/wish/remove/${id}`).then(response => {\n      setDeleteId(\"\");\n      handleClose();\n      let updatedProducts = products.filter(product => product._id !== id);\n      updateProductData(updatedProducts);\n    });\n  };\n\n  let filteredProduct = products.filter(product => {\n    return product.wishlist.some(wish => {\n      return wish._id === user.user._id;\n    });\n  });\n\n  console.log(\"product\", products);\n  console.log(\"wishlist\", filteredProduct);\n  console.log(\"user id\", user.user._id);\n\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Your Wishlist</h1>\n      <Paper>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n\n              <TableCell>Title</TableCell>\n              <TableCell>Quantity</TableCell>\n              <TableCell>Price</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredProduct\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map(data => {\n                return (\n                  <TableRow key={data._id}>\n                    <TableCell>\n                      <img\n                        style={{ height: \"15%\" }}\n                        src={`${data.imageUrl[0]}`}\n                        alt=\"product-image\"\n                      />\n                    </TableCell>\n\n                    <TableCell>{data.title}</TableCell>\n                    <TableCell>{data.quantity}</TableCell>\n                    <TableCell>{data.price}</TableCell>\n                    <TableCell>{data.isSold ? \"Sold\" : \"Available\"}</TableCell>\n                    <TableCell>\n                      <Tooltip title=\"Remove\">\n                        <IconButton aria-label=\"remove\">\n                          <CancelIcon onClick={() => handleOpen(data._id)} />\n                        </IconButton>\n                      </Tooltip>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={filteredProduct.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"previous page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"next page\"\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <Dialog\n        open={alertOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Are you sure you want to remove from Wishlist?\"}\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleRemove} color=\"primary\" autoFocus>\n            Remove\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default DashboardBuyerWish;\n","import React, { Component, useState, useContext, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from \"@material-ui/core\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport useStyles from \"./DashboardStyles\";\n\nconst DashboardBuyerOrder = props => {\n  console.log(\"props\", props);\n  const user = useContext(SessionUserContext);\n  const { products, updateProductData } = useContext(ProductContext);\n\n  let filteredProduct = products.filter(product => {\n    return product.buyer === user.user._id;\n  });\n\n  console.log(\"buyer filered\", filteredProduct);\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Your Orders</h1>\n      {filteredProduct.map(product => {\n        return (\n          <ExpansionPanel>\n            <ExpansionPanelSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>\n                {product.title}\n              </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Typography>\n                <img\n                  style={{ height: \"15%\" }}\n                  src={`${product.imageUrl[0]}`}\n                  alt=\"product-image\"\n                />\n                <div>Price: EUR {product.price}</div>\n                <div>Quantity: {product.quantity}</div>\n                <div>{product.description}</div>\n                {/* <div>Seller: {product.seller.name}</div> */}\n              </Typography>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        );\n      })}\n    </>\n  );\n};\n\nexport default DashboardBuyerOrder;\n","import React, { Component } from \"react\";\nimport DashboardBuyerWish from \"./DashboardBuyerWish\";\nimport DashboardBuyerOrder from \"./DashboardBuyerOrder\";\nimport { ProductContext } from \"../../contexts/ProductContext\";\nimport { SessionUserContext } from \"../../contexts/SessionUserContext\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default class DashboardBuyer extends Component {\n  render() {\n    return (\n      <>\n        <Typography\n          component=\"div\"\n          role=\"tabpanel\"\n          hidden={this.props.value !== this.props.index}\n          id={`seller-tabpanel-${this.props.index}`}\n          aria-labelledby=\"seller-tabpanel\"\n        >\n          <ProductContext.Consumer>\n            {({ products, updateProductData }) => {\n              return (\n                <SessionUserContext.Consumer>\n                  {user => {\n                    return (\n                      <DashboardBuyerWish\n                        products={products}\n                        updateProductData={updateProductData}\n                        user={user}\n                      />\n                    );\n                  }}\n                </SessionUserContext.Consumer>\n              );\n            }}\n          </ProductContext.Consumer>\n          <DashboardBuyerOrder />\n        </Typography>\n      </>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport useStyles from \"./DashboardStyles\";\nimport DashboardSeller from \"./DashboardSeller\";\nimport DashboardBuyer from \"./DashboardBuyer\";\n\nexport default function DashboardContainer() {\n  const classes = useStyles();\n\n  const [selectedTab, setSelectedTab] = useState(0);\n\n  const handleChangeTabs = (event, newValue) => {\n    setSelectedTab(newValue);\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs\n            value={selectedTab}\n            onChange={handleChangeTabs}\n            aria-label=\"dashboard-tabs\"\n            centered\n          >\n            <Tab\n              label=\"Seller's page\"\n              id=\"simple-tab-0\"\n              aria-controls=\"simple-tabpanel-0\"\n            />\n            <Tab\n              label=\"Buyer's page\"\n              id=\"simple-tab-1\"\n              aria-controls=\"simple-tabpanel-1\"\n            />\n          </Tabs>\n        </AppBar>\n        <DashboardSeller value={selectedTab} index={0} />\n\n        <DashboardBuyer value={selectedTab} index={1} />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport axios from \"axios\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  Grid,\n  InputAdornment,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  Select,\n  InputLabel,\n  MenuItem\n} from \"@material-ui/core\";\nimport GoogleMapsInput from \"./GoogleMapsInput\";\nimport service from \"./../../api/service\";\n\nexport default class EditProduct extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    imageUrl: [],\n    brand: \"\",\n    category: \"\",\n    quantity: 0,\n    price: 0,\n    currency: \"EUR\",\n    tags: [],\n    company: \"\",\n    location: {\n      latitude: 52.52,\n      longitude: 13.405,\n      city: \"\",\n      address: \"\",\n      country: \"\"\n    },\n    markerPosition: {\n      lat: 52.52,\n      lng: 13.405\n    },\n    availability: null,\n    warrantyUntil: null,\n    condition: \"\",\n    isSold: false,\n    createdAt: null\n  };\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    // console.log(`id`, id)\n\n    axios\n      .get(`/api/products/${id}`)\n      .then(response => {\n        this.setState({\n          title: response.data.title,\n          description: response.data.description,\n          imageUrl: response.data.imageUrl,\n          brand: response.data.brand,\n          category: response.data.category,\n          quantity: response.data.quantity,\n          price: response.data.price,\n          currency: response.data.currency,\n          tags: response.data.currency,\n          company: response.data.company,\n          availability: response.data.availability,\n          warrantyUntil: response.data.warrantyUntil,\n          condition: response.data.condition,\n          createdAt: response.data.createdAt\n        });\n        // console.log(`GET this.state.response`, response.data)\n      })\n      .catch(err => {\n        console.log(`ERR`, err.response);\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const id = this.props.match.params.id;\n    console.log(id)\n\n    axios\n      //UPDATE /edit/:id route\n      .put(`/api/products/edit/${id}`, {\n        title: this.state.title,\n        description: this.state.description,\n        // FIXME: image Upload\n        imageUrl: this.state.imageUrl,\n        brand: this.state.brand,\n        tags: this.state.tags,\n        category: this.state.category,\n        quantity: this.state.quantity,\n        price: this.state.price,\n        currency: this.state.currency,\n        company: this.state.company,\n        latitude: this.state.location.latitude,\n        longitude: this.state.location.longitude,\n        city: this.state.location.city,\n        address: this.state.location.address,\n        country: this.state.location.country,\n        availability: this.state.availability,\n        warrantyUntil: this.state.warrantyUntil,\n        condition: this.state.condition,\n        createdAt: this.state.created_at\n      })\n      .then(response => {\n        console.log(\"[AddProduct.js] handleSubmit event starting...\");\n        // console.log(\"latitude\", this.state.location.latitude);\n        this.setState({\n          title: \"\",\n          description: \"\",\n          imageUrl: [],\n          brand: \"\",\n          category: \"\",\n          quantity: 0,\n          price: 0,\n          currency: \"EUR\",\n          tags: [],\n          company: \"\",\n          location: {\n            latitude: null,\n            longitude: null,\n            city: \"\",\n            address: \"\",\n            country: \"\"\n          },\n          availability: null,\n          warrantyUntil: null,\n          condition: \"\",\n          createdAt: null\n        });\n        console.log(`[EditProduct.js] response.data:`, response.data);\n      })\n      .catch(err => {\n        console.log(`ERROR editing product`, err);\n      });\n  };\n\n  // catching the date for availability\n  handleDateChange = date => {\n    this.setState({\n      availability: date\n    });\n    console.log(\"availability:\", date);\n  };\n\n  //catching the date for warranty until\n  handleDateChangeWarrantyUntil = date => {\n    this.setState({\n      warrantyUntil: date\n    });\n    console.log(\"warrantyUntil:\", date);\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(\"handleChange event.target.value\", event.target.value);\n  };\n  \n   // Upload to Cloudinary\n   handleImageUpload = event => {\n    console.log(\"The Image to be uploaded is: \", event.target.files[0]);\n\n    const uploadData = new FormData();\n    // req.body to .create() method when creating a new Image in '/api/products/new' POST route\n    uploadData.append(\"imageUrl\", event.target.files[0]);\n\n    service.handleUpload(uploadData)\n    .then(response => {\n      console.log(response)\n        this.setState({imageUrl:[...this.state.imageUrl,response.secure_url]});\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  getMapData = (address, country, city, lat, lng) => {\n    this.setState({\n      location: {\n        latitude: lat,\n        longitude: lng,\n        city: city,\n        address: address,\n        country: country\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    const styling = makeStyles(theme => ({\n      button: {\n        margin: theme.spacing(1)\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n      },\n      input: {\n        display: \"none\"\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2)\n      }\n    }));\n\n    const classes = styling;\n\n    console.log(`PROPS BEFORE RENDER`, this.state)\n\n    return (\n      <div>\n        <h1>Edit Product</h1>\n        <FormControl onSubmit={this.handleSubmit}>\n          {/* Title */}\n          <TextField\n            required\n            id=\"outlined-title-input\"\n            label=\"Title\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"e.g. Nestlé D1234 Coffee Maker\"\n            autoComplete=\"title\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          {/* Description */}\n          <TextField\n            id=\"outlined-description-input\"\n            label=\"Description\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"description\"\n            autoComplete=\"description\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          {/* Brand */}\n          <TextField\n            id=\"outlined-brand-input\"\n            label=\"Brand\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"e.g. Apple\"\n            autoComplete=\"brand\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.brand}\n            onChange={this.handleChange}\n          />\n          {/* Tags */}\n          {/* <Checkbox\n            id=\"outlined-tags-input\"\n            label=\"Tags\"\n            className={classes.textField}\n            type=\"checkbox\"\n            name=\"tags\"\n            placeholder=\"Restaurant\"\n            autoComplete=\"tags\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.tags}\n            onChange={this.handleChange}\n          /> */}\n          {/* {Category} */}\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-category-simple\">Category</InputLabel>\n            <Select\n              value={this.state.category}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"category\",\n                id: \"outlined-category-simple\"\n              }}\n            >\n              <MenuItem value=\"Category\">\n                <em>Select...</em>\n              </MenuItem>\n              <MenuItem value={\"Food\"}>Food</MenuItem>\n              <MenuItem value={\"Textile\"}>Textile</MenuItem>\n              <MenuItem value={\"Energy\"}>Energy</MenuItem>\n              <MenuItem value={\"Architecture\"}>Architecture</MenuItem>\n              <MenuItem value={\"Woodwork\"}>Woodwork</MenuItem>\n              <MenuItem value={\"Art\"}>Art</MenuItem>\n              <MenuItem value={\"Economics\"}>Economics</MenuItem>\n              <MenuItem value={\"Science\"}>Science</MenuItem>\n              <MenuItem value={\"Education\"}>Education</MenuItem>\n              <MenuItem value={\"Manufactory\"}>Manufactory</MenuItem>\n            </Select>\n          </FormControl>\n          {/* Quantity */}\n          <TextField\n            required\n            id=\"outlined-quantity-input\"\n            label=\"Quantity\"\n            className={classes.textField}\n            type=\"number\"\n            name=\"quantity\"\n            autoComplete=\"quantity\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.quantity}\n            onChange={this.handleChange}\n          />\n          {/* Price */}\n          <TextField\n            id=\"outlined-adornment-price\"\n            label=\"Price\"\n            className={classes.textField}\n            type=\"number\"\n            name=\"price\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.price}\n            onChange={this.handleChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">EUR</InputAdornment>\n              )\n            }}\n          />\n          {/* Company */}\n          <TextField\n            id=\"outlined-company-input\"\n            label=\"Company Name\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"company\"\n            placeholder=\"IchiBizz Inc\"\n            autoComplete=\"company\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.company}\n            onChange={this.handleChange}\n          />\n          {/* Location (read-only) this is populated from the map*/}\n          <TextField\n            disabled\n            id=\"outlined-location\"\n            label=\"Location\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"address\"\n            placeholder=\"e.g. Berlin\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.location.address}\n            onChange={this.getMapData}\n          />\n          {/* Availability */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                name=\"availability\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Availability Date\"\n                value={this.state.availability}\n                onChange={this.handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"Change Date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          {/* Warranty Until */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                name=\"warrantyUntil\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Warranty until\"\n                value={this.state.warrantyUntil}\n                onChange={this.handleDateChangeWarrantyUntil}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"Change Date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          {/* Condition */}\n          <FormControl\n            required\n            component=\"fieldset\"\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Condition</FormLabel>\n            <RadioGroup\n              aria-label=\"condition\"\n              name=\"condition\"\n              value={this.state.condition}\n              onChange={this.handleChange}\n            >\n              <FormControlLabel\n                value=\"used\"\n                control={<Radio />}\n                label=\"used\"\n                name=\"condition\"\n              />\n              <FormControlLabel\n                value=\"new\"\n                control={<Radio />}\n                label=\"new\"\n                name=\"condition\"\n              />\n            </RadioGroup>\n          </FormControl>\n          <br />\n          {/* // FIXME: Decide tagging via Google Vision\n          Category: [google vision?] */}\n          {/* image Url */}\n          <label htmlFor=\"imageUrl\">Upload Image </label>\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            onChange={this.handleImageUpload}\n          />\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            className={classes.button}\n            onClick={this.handleSubmit}\n            noValidate\n          >\n           Update\n          </Button>\n        </FormControl>\n          {/* GoogleMaps for entering location */}\n          <GoogleMapsInput\n          google={this.props.google}\n          center={{\n            lat: 52.52,\n            lng: 13.405\n          }}\n          height=\"300px\"\n          zoom={12}\n          getMapData={this.getMapData}\n          markerPosition={{\n            lat: this.state.markerPosition.lat,\n            lng: this.state.markerPosition.lng\n          }}\n          address={this.state.location.address}\n          country={this.state.location.country}\n          city={this.state.location.city}\n          mapPosition={{\n            lat: this.state.location.latitude,\n            lng: this.state.location.longitude\n          }}\n        />\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst Protected = ({\n  component: Component,\n  user,\n  path,\n  redirectPath = \"/\",\n  ...rest\n}) => {\n  return (\n    <Route\n      path={path}\n      render={props => {\n        return user ? (\n          <Component {...props} {...rest} user={user} />\n        ) : (\n          <Redirect to={redirectPath} />\n        );\n      }}\n    />\n  );\n};\n\nexport default Protected;\n","import React, { Component } from \"react\";\nimport ProductsList from \"./components/products/ProductsList\";\nimport SignUp from \"./components/SignUp\";\nimport Login from \"./components/Login\";\nimport ProductDetails from \"./components/products/ProductDetails\";\nimport AddProduct from \"./components/products/AddProduct\";\nimport DashboardContainer from \"./components/dashboard/DashboardContainer\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport EditProduct from \"./components/products/EditProduct\";\nimport \"./App.css\";\nimport UserContextProvider from \"./contexts/UserContext\";\nimport Protected from \"./Protected\";\nimport { ProductProvider } from \"./contexts/ProductContext\";\nimport { SessionUserProvider } from \"./contexts/SessionUserContext\";\n\nexport default class App extends Component {\n  state = {\n    products: this.props.products,\n    user: this.props.user\n  };\n\n  updateProductData = products => {\n    this.setState({ products });\n  };\n\n  render() {\n    return (\n      <div>\n        <SessionUserProvider value={{ user: this.state.user }}>\n          <ProductProvider\n            value={{\n              products: this.state.products,\n              updateProductData: this.updateProductData\n            }}\n          >\n            <Route\n              exact\n              path=\"/signup\"\n              user={this.state.user}\n              component={SignUp}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              user={this.state.user}\n              component={Login}\n            />\n            <UserContextProvider>\n              <Switch>\n                <Protected\n                  exact\n                  path=\"/dashboard\"\n                  user={this.state.user}\n                  component={DashboardContainer}\n                />\n                <Route\n                  exact\n                  path=\"/products\"\n                  user={this.state.user}\n                  component={ProductsList}\n                />\n                <Protected\n                  exact\n                  path=\"/products/new\"\n                  user={this.state.user}\n                  component={AddProduct}\n                />\n                <Route\n                  exact\n                  path=\"/products/:id\"\n                  user={this.state.user}\n                  component={ProductDetails}\n                />\n                <Protected\n                  exact\n                  path=\"/products/edit/:id\"\n                  component={EditProduct}\n                />\n              </Switch>\n            </UserContextProvider>\n          </ProductProvider>\n        </SessionUserProvider>\n\n        {/* <div className=\"App\">\n        <Switch>\n          <Route\n            exact\n            path=\"/products\"\n            component={ProductsList} />\n            <Route\n            exact\n            path=\"/products/new\"\n            component={AddProduct}\n          />\n          <Route\n            exact\n            path=\"/products/:id\"\n            component={ProductDetails}\n          />\n\n          <Route\n            exact\n            path=\"/products/edit/:id\"\n            component={EditProduct}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            component={SignUp}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            component={Login}\n          />\n        </Switch> */}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport axios from \"axios\";\n\naxios\n  .get(\"/api/auth/loggedin\")\n  .then(userResponse => {\n    const user = userResponse.data;\n    axios.get(\"/api/products\").then(response => {\n      ReactDOM.render(\n        <BrowserRouter>\n          <CssBaseline />\n          <App products={response.data} user={user} />\n        </BrowserRouter>,\n        document.getElementById(\"root\")\n      );\n    });\n  })\n  .catch(err => {\n    console.log(err);\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}