{"version":3,"sources":["components/SearchFilterStyles.js","components/products/SearchFilter.js","components/GoogleMapsProductsList.js","components/products/ProductListStyles.js","components/products/ProductsList.js","components/products/ProductDetails.js","components/products/GoogleMapsInput.js","components/products/AddProduct.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","theme","card","maxWidth","root","width","filterContainer","display","flexDirection","justifyContent","alignItems","SearchFilter","classes","TextField","label","id","type","margin","className","textField","name","variant","autoComplete","value","this","props","searchText","onChange","handleChange","InputLabel","htmlFor","Select","searchCity","inputProps","MenuItem","distinctCity","map","city","searchCategory","distinctCategory","category","searchBrand","distinctBrand","brand","Typography","gutterBottom","Slider","priceValue","handlePriceChange","valueLabelDisplay","aria-labelledby","max","maxPrice","utils","DateFnsUtils","Grid","container","justify","disableToolbar","format","selectedDate","handleDateChange","KeyboardButtonProps","Component","withStyles","MapWrapped","withScriptjs","withGoogleMap","useState","selectedProduct","setSelectedProduct","console","log","useEffect","listener","e","key","window","addEventListener","removeEventListener","defaultZoom","defaultCenter","lat","lng","filteredProduct","product","_id","position","location","latitude","longitude","onClick","icon","url","scaledSize","google","maps","Size","onCloseClick","title","price","quantity","GoogleMapsProductsList","style","height","googleMapURL","loadingElement","containerElement","mapElement","mapListContainer","alignContent","listPageContainer","ProductsList","state","products","Date","getData","axios","get","then","response","setState","data","catch","err","componentDidMount","event","target","newValue","date","Set","filter","isSoldMatch","isSold","searchMatched","toLowerCase","includes","tags","find","tag","categoryMatched","priceMatched","dateMatched","parse","availability","Card","CardActionArea","CardMedia","component","alt","image","imageUrl","CardContent","to","color","description","currency","CardActions","Button","size","ProductDetails","company","warrantyUntil","condition","createdAt","match","params","status","error","Fragment","Geocode","setApiKey","enableDebug","GoogleMapsInput","center","getCity","addressArray","i","length","types","long_name","getCountry","onPlaceSelected","place","formatted_address","address","address_components","country","latValue","geometry","lngValue","getMapData","fromAddress","results","onMarkerDrag","newLat","latLng","newLng","fromLatLng","nextProps","nextState","AsyncMap","zoom","mapPosition","draggable","onDragEnd","markerPosition","paddingLeft","marginTop","marginBottom","undefined","AddProduct","handleSubmit","preventDefault","post","created_at","handleDateChangeWarrantyUntil","imageHandler","files","makeStyles","button","spacing","marginLeft","marginRight","input","dense","menu","flexWrap","formControl","minWidth","selectEmpty","FormControl","onSubmit","required","placeholder","InputProps","startAdornment","InputAdornment","disabled","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","multiple","noValidate","App","exact","path","Boolean","hostname","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c876767f.chunk.js","sourcesContent":["const useStyles = theme => ({\n  card: {\n    maxWidth: 100\n  },\n  root: {\n    width: 300\n  },\n  filterContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n    // alignContent: \"center\"\n  }\n});\n\nexport default useStyles;\n","import React, { Component } from \"react\";\nimport {\n  Slider,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport useStyles from \"./../SearchFilterStyles\";\nimport \"./../../App.css\";\n\nclass SearchFilter extends Component {\n  render() {\n    const classes = useStyles;\n    return (\n      <>\n        <TextField\n          label=\"search\"\n          id=\"outlined-name-input\"\n          type=\"search\"\n          margin=\"normal\"\n          className={classes.textField}\n          name=\"searchText\"\n          variant=\"outlined\"\n          autoComplete=\"search\"\n          value={this.props.searchText}\n          onChange={this.props.handleChange}\n        />\n\n        <InputLabel htmlFor=\"outlined-location-simple\">Location</InputLabel>\n        <Select\n          value={this.props.searchCity}\n          onChange={this.props.handleChange}\n          inputProps={{\n            name: \"searchCity\",\n            id: \"searchCity\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.distinctCity.map(city => {\n            return <MenuItem value={city}>{city}</MenuItem>;\n          })}\n        </Select>\n\n        <InputLabel htmlFor=\"outlined-category-simple\">Category</InputLabel>\n        <Select\n          value={this.props.searchCategory}\n          onChange={this.props.handleChange}\n          inputProps={{\n            name: \"searchCategory\",\n            id: \"searchCategory\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.distinctCategory.map(category => {\n            return <MenuItem value={category}>{category}</MenuItem>;\n          })}\n        </Select>\n\n        <InputLabel htmlFor=\"outlined-brand-simple\">Brand name</InputLabel>\n        <Select\n          value={this.props.searchBrand}\n          onChange={this.props.handleChange}\n          inputProps={{\n            name: \"searchBrand\",\n            id: \"searchBrand\"\n          }}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.distinctBrand.map(brand => {\n            return <MenuItem value={brand}>{brand}</MenuItem>;\n          })}\n        </Select>\n\n        <div className={classes.root}>\n          <Typography id=\"range-slider\" gutterBottom>\n            Price range\n          </Typography>\n          <Slider\n            name=\"priceValue\"\n            value={this.props.priceValue}\n            onChange={this.props.handlePriceChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"range-slider\"\n            max={this.props.maxPrice}\n            // getAriaValueText={valuetext}\n          />\n        </div>\n        <div className={classes.root}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Filter by availability\"\n                name=\"selectedDate\"\n                value={this.props.selectedDate}\n                onChange={this.props.handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(SearchFilter);\n","import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\n\nfunction MapList(props) {\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  console.log(\"testttt\", props);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedProduct(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <>\n      <GoogleMap\n        defaultZoom={4}\n        defaultCenter={{ lat: -34, lng: 150 }}\n        // defaultOptions={{ styles: mapStyles }}\n      >\n        {props.filteredProduct.map(product => (\n          <Marker\n            key={product._id}\n            position={{\n              lat: product.location.latitude,\n              lng: product.location.longitude\n            }}\n            onClick={() => {\n              setSelectedProduct(product);\n            }}\n            icon={{\n              url: \"/map-marker-alt-solid.svg\",\n              scaledSize: new window.google.maps.Size(25, 25)\n            }}\n          />\n        ))}\n        {selectedProduct && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedProduct(null);\n            }}\n            position={{\n              lat: selectedProduct.location.latitude,\n              lng: selectedProduct.location.longitude\n            }}\n          >\n            <div>\n              <h2>{selectedProduct.title}</h2>\n              <p>{selectedProduct.price}</p>\n              <p>{selectedProduct.quantity}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </>\n  );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(MapList));\n\nexport default function GoogleMapsProductsList(props) {\n  console.log(props);\n  return (\n    <div style={{ width: \"40vw\", height: \"80vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAEEpqstn15A1q4yFwIv81jnDVG7X0hm9Q`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n        filteredProduct={props.filteredProduct}\n      />\n    </div>\n  );\n}\n","const useStyles = theme => ({\n  card: {\n    maxWidth: 300\n    // margin: \"0 auto\"\n  },\n  mapListContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    // alignItems: \"center\",\n    alignContent: \"center\"\n  },\n  listPageContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nexport default useStyles;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport SearchFilter from \"./SearchFilter\";\n\nimport GoogleMapsProductsList from \"../GoogleMapsProductsList\";\n\nimport useStyles from \"./ProductListStyles\";\nimport {\n  Typography,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  CardActionArea,\n  Card,\n  withStyles\n} from \"@material-ui/core\";\n\nclass ProductsList extends Component {\n  state = {\n    products: [],\n    searchText: \"\",\n    searchCategory: \"\",\n    searchBrand: \"\",\n\n    searchCity: \"\",\n\n    priceValue: [20, 300],\n    selectedDate: new Date(\"December 31, 2019\")\n  };\n\n  getData = () => {\n    axios\n      .get(\"/api/products\")\n      .then(response => {\n        console.log(response);\n        this.setState({\n          products: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handlePriceChange = (event, newValue) => {\n    this.setState({\n      priceValue: newValue\n    });\n  };\n\n  handleDateChange = date => {\n    this.setState({\n      selectedDate: date\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    // the distinctCategory variable is created to populate the category dropdown\n    const distinctCategory = [\n      ...new Set(\n        this.state.products.map(product => {\n          return product.category;\n        })\n      )\n    ];\n\n    const distinctBrand = [\n      ...new Set(\n        this.state.products.map(product => {\n          return product.brand;\n        })\n      )\n    ];\n\n    const distinctCity = [\n      ...new Set(\n        this.state.products.map(product => {\n          return product.location.city;\n        })\n      )\n    ];\n\n    // const maxPrice = Math.max(\n    //   ...this.state.products.map(product => {\n    //     return product.price;\n    //   })\n    // );\n\n    let filteredProduct = this.state.products.filter(product => {\n      let isSoldMatch = product.isSold === false;\n\n      let searchMatched =\n        product.title\n          .toLowerCase()\n          .includes(this.state.searchText.toLowerCase()) ||\n        product.tags.find(tag => {\n          return tag\n            .toLowerCase()\n            .includes(this.state.searchText.toLowerCase());\n        });\n\n      let categoryMatched = product.category\n        .toLowerCase()\n        .includes(this.state.searchCategory.toLowerCase());\n\n      let priceMatched =\n        product.price >= this.state.priceValue[0] &&\n        product.price <= this.state.priceValue[1];\n\n      // Date.parse converts the date string into milliseconds\n      let dateMatched =\n        Date.parse(product.availability) <= Date.parse(this.state.selectedDate);\n\n      return (\n        isSoldMatch &&\n        searchMatched &&\n        categoryMatched &&\n        priceMatched &&\n        dateMatched\n      );\n    });\n\n    return (\n      <div className={classes.listPageContainer}>\n        <h1>Product List</h1>\n        <SearchFilter\n          searchText={this.state.searchText}\n          searchCategory={this.state.searchCategory}\n          searchBrand={this.state.searchBrand}\n          searchCity={this.state.searchCity}\n          priceValue={this.state.priceValue}\n          selectedDate={this.state.selectedDate}\n          handleChange={this.handleChange}\n          distinctCategory={distinctCategory}\n          distinctBrand={distinctBrand}\n          distinctCity={distinctCity}\n          // maxPrice={maxPrice}\n\n          handleDateChange={this.handleDateChange}\n          handlePriceChange={this.handlePriceChange}\n        />\n        <GoogleMapsProductsList filteredProduct={filteredProduct} />\n\n        <div className={classes.mapListContainer}>\n          <div>\n            {filteredProduct.map(data => {\n              return (\n                <>\n                  <Card className={classes.card}>\n                    <CardActionArea>\n                      <CardMedia\n                        component=\"img\"\n                        alt={data.title}\n                        height=\"140\"\n                        image={`${data.imageUrl[0]}`}\n                        title={data.title}\n                      />\n                      <CardContent>\n                        <Link to={`/products/${data._id}`}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {data.title}\n                          </Typography>\n                        </Link>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                        >\n                          {data.description} <br />\n                          {data.currency} {data.price}\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                      <Button size=\"small\" color=\"primary\">\n                        Add to wishlist\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ProductsList);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import AddProduct from \"./AddProduct\";\n// import {\n//   Button,\n//   Grid\n// } from \"@material-ui/core\";\n\nexport default class ProductDetails extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    imageUrl: [],\n    brand: \"\",\n    category: \"\",\n    quantity: 0,\n    price: 0,\n    currency: \"EUR\",\n    tags: [],\n    company: \"\",\n    location: {\n      latitude: null,\n      longitude: null\n    },\n    availability: null,\n    warrantyUntil: null,\n    condition: \"\",\n    isSold: false,\n    createdAt: null\n  };\n\n  getData = () => {\n    const id = this.props.match.params.id;\n    // console.log(`id`, id)\n\n    axios\n      .get(`/api/products/${id}`)\n      .then(response => {\n        // TODO @Ninette: latitude, longitude\n        this.setState({\n          title: response.data.title,\n          description: response.data.description,\n          imageUrl: response.data.imageUrl,\n          brand: response.data.brand,\n          category: response.data.category,\n          quantity: response.data.quantity,\n          price: response.data.price,\n          currency: response.data.currency,\n          tags: response.data.currency,\n          company: response.data.company,\n          availability: response.data.availability,\n          warrantyUntil: response.data.warrantyUntil,\n          condition: response.data.condition,\n          createdAt: response.data.createdAt\n        });\n        // console.log(`GET this.state.response`, response.data)\n      })\n      .catch(err => {\n        console.log(`ERR`, err.response);\n        if (err.response.status === 404) {\n          this.setState({ error: \"Not found\" });\n        }\n      });\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  };\n\n  render() {\n    // TODO 1: Implement Material UI Styles once we agreed on one style\n\n    const {\n      title,\n      description,\n      imageUrl,\n      brand,\n      category,\n      quantity,\n      price,\n      currency,\n      tags,\n      company,\n      availability,\n      warrantyUntil,\n      condition,\n      isSold,\n      createdAt\n    } = this.state;\n\n    return (\n      <div>\n        <h1>Product Details Page</h1>\n        <React.Fragment>\n          {/* <div>\n          // FIXME: Images Array upload\n            {\n              imageUrl.map((img, index)=> {\n                // Return all images\n                return (\n                  // FIXME: unique key w/o index\n                  <div key={index}>\n                    <img src={img} alt=\"images\"/>\n                  </div>\n                )\n              })\n            }\n          </div> */}\n          <h2>{title}</h2>\n          <div>\n            {description}\n            {brand}\n            {tags}\n            {category}\n            {quantity}\n            {price}\n            {currency}\n            {company}\n            {/* // TODO @Ninette: Add latitude, longitude */}\n            {availability}\n            {warrantyUntil}\n            {condition}\n            {/* // TODO: Only seller should see `isSold` */}\n            {isSold}\n            {createdAt}\n          </div>\n        </React.Fragment>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  Marker\n} from \"react-google-maps\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyAEEpqstn15A1q4yFwIv81jnDVG7X0hm9Q\");\nGeocode.enableDebug();\n\nclass GoogleMapsInput extends Component {\n  state = {\n    center: {\n      lat: this.props.center.lat,\n      lng: this.props.center.lng\n    }\n  };\n\n  getCity = addressArray => {\n    let city = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (\n        addressArray[i].types[0] &&\n        \"administrative_area_level_1\" === addressArray[i].types[0]\n      ) {\n        city = addressArray[i].long_name;\n        return city;\n      }\n    }\n  };\n\n  getCountry = addressArray => {\n    let country = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (addressArray[i].types[0] && \"country\" === addressArray[i].types[0]) {\n        country = addressArray[i].long_name;\n        return country;\n      }\n    }\n  };\n\n  onPlaceSelected = place => {\n    console.log(place);\n    if (place.formatted_address) {\n      const address = place.formatted_address,\n        addressArray = place.address_components,\n        city = this.getCity(addressArray),\n        country = this.getCountry(addressArray),\n        latValue = place.geometry.location.lat(),\n        lngValue = place.geometry.location.lng();\n\n      this.props.getMapData(address, city, country, latValue, lngValue);\n    } else {\n      Geocode.fromAddress(place.name)\n        .then(response => {\n          console.log(response);\n          const data = response.results[0];\n          const address = data.formatted_address,\n            addressArray = data.address_components,\n            city = this.getCity(addressArray),\n            country = this.getCountry(addressArray),\n            latValue = data.geometry.location.lat,\n            lngValue = data.geometry.location.lng;\n\n          this.props.getMapData(address, city, country, latValue, lngValue);\n        })\n        .then(err => {\n          console.log(err);\n        });\n    }\n  };\n\n  onMarkerDrag = event => {\n    console.log(event);\n    let newLat = event.latLng.lat(),\n      newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng)\n      .then(response => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          country = this.getCountry(addressArray);\n\n        this.props.getMapData(address, city, country, newLat, newLng);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap(props => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          center={{\n            lat: this.props.mapPosition.lat,\n            lng: this.props.mapPosition.lng\n          }}\n        >\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={this.props.address}\n            draggable={true}\n            onDragEnd={this.onMarkerDrag}\n            position={{\n              lat: this.props.markerPosition.lat,\n              lng: this.props.markerPosition.lng\n            }}\n          />\n          <Marker />\n          {/* For Auto complete Search Box */}\n          <Autocomplete\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              paddingLeft: \"16px\",\n              marginTop: \"2px\",\n              marginBottom: \"100px\"\n            }}\n            onPlaceSelected={this.onPlaceSelected}\n          />\n        </GoogleMap>\n      ))\n    );\n\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <>\n          <div>\n            <AsyncMap\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEEpqstn15A1q4yFwIv81jnDVG7X0hm9Q&libraries=places\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: this.props.height }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n            />\n            <p>{this.props.address}</p>\n          </div>\n        </>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\n\nexport default GoogleMapsInput;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  Grid,\n  InputAdornment,\n  Radio,\n  RadioGroup,\n  FormLabel,\n  FormControlLabel,\n  Select,\n  InputLabel,\n  MenuItem\n} from \"@material-ui/core\";\nimport GoogleMapsInput from \"./GoogleMapsInput\";\n\nexport default class AddProduct extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    imageUrl: [],\n    brand: \"\",\n    category: \"\",\n    quantity: 0,\n    price: 0,\n    currency: \"EUR\",\n    tags: [],\n    company: \"\",\n    location: {\n      latitude: 52.52,\n      longitude: 13.405,\n      city: \"\",\n      address: \"\",\n      country: \"\"\n    },\n    markerPosition: {\n      lat: 52.52,\n      lng: 13.405\n    },\n    availability: null,\n    warrantyUntil: null,\n    condition: \"\",\n    createdAt: null\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    axios\n      // GET api/products/new to map with defined route in GET method of '/products/ProductDetails.js`\n      .post(\"/api/products/new\", {\n        title: this.state.title,\n        description: this.state.description,\n        // FIXME: image Upload\n        imageUrl: this.state.imageUrl,\n        brand: this.state.brand,\n        tags: this.state.tags,\n        category: this.state.category,\n        quantity: this.state.quantity,\n        price: this.state.price,\n        currency: this.state.currency,\n        company: this.state.company,\n        latitude: this.state.location.latitude,\n        longitude: this.state.location.longitude,\n        city: this.state.location.city,\n        address: this.state.location.address,\n        country: this.state.location.country,\n        availability: this.state.availability,\n        warrantyUntil: this.state.warrantyUntil,\n        condition: this.state.condition,\n        createdAt: this.state.created_at\n      })\n      .then(response => {\n        console.log(\"[AddProduct.js] handleSubmit event starting...\");\n        console.log(\"latitude\", this.state.location.latitude);\n        this.setState({\n          title: \"\",\n          description: \"\",\n          imageUrl: [],\n          brand: \"\",\n          category: \"\",\n          quantity: 0,\n          price: 0,\n          currency: \"EUR\",\n          tags: [],\n          company: \"\",\n          location: {\n            latitude: null,\n            longitude: null,\n            city: \"\",\n            address: \"\",\n            country: \"\"\n          },\n          availability: null,\n          warrantyUntil: null,\n          condition: \"\",\n          createdAt: null\n        });\n        console.log(`[AddProduct.js] response.data:`, response.data);\n        // FIXME: this.props.getData() is not a function\n        // this.getData();\n      })\n      .catch(err => {\n        console.log(`[AddProduct.js]: response data`, err);\n      });\n  };\n\n  //catching the date for availability\n  handleDateChange = date => {\n    this.setState({\n      availability: date\n    });\n    console.log(\"availability:\", date);\n  };\n\n  //catching the date for warranty until\n  handleDateChangeWarrantyUntil = date => {\n    this.setState({\n      warrantyUntil: date\n    });\n    console.log(\"warrantyUntil:\", date);\n  };\n\n  // eventhandler\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n    console.log(\"handleChange event.target.value\", event.target.value);\n  };\n\n  //image upload\n  imageHandler = event => {\n    console.log(event.target.files[0]);\n    this.setState({\n      // TODO: Render all images later, not only first one\n      imageUrl: [...this.state.imageUrl, event.target.files[0].name]\n    });\n  };\n\n  getMapData = (address, country, city, lat, lng) => {\n    this.setState({\n      location: {\n        latitude: lat,\n        longitude: lng,\n        city: city,\n        address: address,\n        country: country\n      },\n      markerPosition: {\n        lat: lat,\n        lng: lng\n      }\n    });\n  };\n\n  render() {\n    const styling = makeStyles(theme => ({\n      button: {\n        margin: theme.spacing(1)\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1)\n      },\n      input: {\n        display: \"none\"\n      },\n      dense: {\n        marginTop: theme.spacing(2)\n      },\n      menu: {\n        width: 200\n      },\n      root: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2)\n      }\n    }));\n\n    const classes = styling;\n    return (\n      <>\n        <FormControl onSubmit={this.handleSubmit}>\n          {/* Title */}\n          <TextField\n            required\n            id=\"outlined-title-input\"\n            label=\"Title\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"e.g. Nestlé D1234 Coffee Maker\"\n            autoComplete=\"title\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n          {/* Description */}\n          <TextField\n            id=\"outlined-description-input\"\n            label=\"Description\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"description\"\n            autoComplete=\"description\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n          {/* Brand */}\n          <TextField\n            id=\"outlined-brand-input\"\n            label=\"Brand\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"e.g. Apple\"\n            autoComplete=\"brand\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.brand}\n            onChange={this.handleChange}\n          />\n          {/* {Category} */}\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel htmlFor=\"outlined-category-simple\">Category</InputLabel>\n            <Select\n              value={this.state.category}\n              onChange={this.handleChange}\n              inputProps={{\n                name: \"category\",\n                id: \"outlined-category-simple\"\n              }}\n            >\n              <MenuItem value=\"Category\">\n                <em>Select...</em>\n              </MenuItem>\n              <MenuItem value={\"Food\"}>Food</MenuItem>\n              <MenuItem value={\"Textile\"}>Textile</MenuItem>\n              <MenuItem value={\"Energy\"}>Energy</MenuItem>\n              <MenuItem value={\"Architecture\"}>Architecture</MenuItem>\n              <MenuItem value={\"Woodwork\"}>Woodwork</MenuItem>\n              <MenuItem value={\"Art\"}>Art</MenuItem>\n              <MenuItem value={\"Economics\"}>Economics</MenuItem>\n              <MenuItem value={\"Science\"}>Science</MenuItem>\n              <MenuItem value={\"Education\"}>Education</MenuItem>\n              <MenuItem value={\"Manufactory\"}>Manufactory</MenuItem>\n            </Select>\n          </FormControl>\n          {/* Quantity */}\n          <TextField\n            required\n            id=\"outlined-quantity-input\"\n            label=\"Quantity\"\n            className={classes.textField}\n            type=\"number\"\n            name=\"quantity\"\n            autoComplete=\"quantity\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.quantity}\n            onChange={this.handleChange}\n          />\n          {/* Price */}\n          <TextField\n            id=\"outlined-adornment-price\"\n            label=\"Price\"\n            className={classes.textField}\n            type=\"number\"\n            name=\"price\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.price}\n            onChange={this.handleChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">EUR</InputAdornment>\n              )\n            }}\n          />\n          {/* Company */}\n          <TextField\n            id=\"outlined-company-input\"\n            label=\"Company Name\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"company\"\n            placeholder=\"IchiBizz Inc\"\n            autoComplete=\"company\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.company}\n            onChange={this.handleChange}\n          />\n          {/* Location (read-only) this is populated from the map*/}\n          <TextField\n            disabled\n            id=\"outlined-location\"\n            label=\"Location\"\n            className={classes.textField}\n            type=\"text\"\n            name=\"address\"\n            placeholder=\"e.g. Berlin\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            value={this.state.location.address}\n          />\n          {/* Availability */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                name=\"availability\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Availability Date\"\n                value={this.state.availability}\n                onChange={this.handleDateChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"Change Date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          {/* Warranty Until */}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardDatePicker\n                disableToolbar\n                name=\"warrantyUntil\"\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Warranty until\"\n                value={this.state.warrantyUntil}\n                onChange={this.handleDateChangeWarrantyUntil}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\"\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n          {/* Condition */}\n          <FormControl\n            required\n            component=\"fieldset\"\n            className={classes.formControl}\n          >\n            <FormLabel component=\"legend\">Condition</FormLabel>\n            <RadioGroup\n              aria-label=\"condition\"\n              name=\"condition\"\n              value={this.state.condition}\n              onChange={this.handleChange}\n            >\n              <FormControlLabel\n                value=\"used\"\n                control={<Radio />}\n                label=\"used\"\n                name=\"condition\"\n              />\n              <FormControlLabel\n                value=\"new\"\n                control={<Radio />}\n                label=\"new\"\n                name=\"condition\"\n              />\n            </RadioGroup>\n          </FormControl>\n          {/* image Url */}\n          <label htmlFor=\"imageUrl\">Upload Image(s): </label>\n          <input\n            type=\"file\"\n            multiple\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            // FIXME: value={this.state.imageUrl}\n            onChange={this.imageHandler}\n          />\n          <br />\n          {/* // FIXME: Decide tagging via Google Vision\n\n          Category: [google vision?] */}\n\n          <br />\n          <Button\n            type=\"submit\"\n            variant=\"outlined\"\n            className={classes.button}\n            onClick={this.handleSubmit}\n            noValidate\n          >\n            Create\n          </Button>\n        </FormControl>\n        {/* GoogleMaps for entering location */}\n        <GoogleMapsInput\n          google={this.props.google}\n          center={{\n            lat: 52.52,\n            lng: 13.405\n          }}\n          height=\"300px\"\n          zoom={12}\n          getMapData={this.getMapData}\n          markerPosition={{\n            lat: this.state.markerPosition.lat,\n            lng: this.state.markerPosition.lng\n          }}\n          address={this.state.location.address}\n          country={this.state.location.country}\n          city={this.state.location.city}\n          mapPosition={{\n            lat: this.state.location.latitude,\n            lng: this.state.location.longitude\n          }}\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProductsList from \"./components/products/ProductsList\";\nimport ProductDetails from \"./components/products/ProductDetails\";\nimport AddProduct from \"./components/products/AddProduct\";\nimport { Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <Route exact path=\"/products\" component={ProductsList} />\n        <Route\n          exact\n          path=\"/products/:id\"\n          component={ProductDetails}\n        />\n        <Route\n          exact\n          path=\"/products/new\"\n          component={AddProduct}\n        />\n\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <CssBaseline />\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}